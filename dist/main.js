(()=>{"use strict";var e={137:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),a=t(645),A=t.n(a)()(o());A.push([e.id,'*{padding:0;margin:0}body{height:100vh;background-color:#d8ece8;display:grid;grid-template-columns:1fr 5fr;grid-template-rows:1fr 20fr;grid-template-areas:"header header" "nav main" "nav main" "nav main" "nav main" "nav main" "nav main" "nav main"}.nav{background-color:#f1b770;color:#393d3a;grid-area:nav}.nav li{display:flex;flex-direction:column;gap:2em;justify-content:flex-start;margin-left:1em;margin-top:4em}.main{grid-area:main;display:flex;flex-direction:column;gap:1em}#add-to-do{width:50px;height:50px;display:flex;justify-content:center;align-items:center;background-color:#62c1dd}.checkbox-container{display:flex;align-items:center}.checkbox-container p{align-self:flex-end;justify-self:flex-end;margin-left:auto}.checkbox-container label{cursor:pointer;display:flex}.checkbox-container label::before{content:"";width:1em;height:1em;margin-right:.5em;border-radius:.15em;border:.05em solid #000}.checkbox-container label:hover::before{background-color:#62c1dd}.checkbox-container input[type=checkbox]{cursor:pointer;opacity:0;position:absolute}.checkbox-container input[type=checkbox]:hover+label::before{background-color:#62c1dd}.checkbox-container input[type=checkbox]:checked+label::before{content:"âœ”";background-color:#2793b2;display:flex;justify-content:center;align-items:center;color:#d8ece8}.checkbox-container input[type=checkbox]:focus+label::before{box-shadow:0 0 20px #000}.header{grid-area:header}#forms-container{justify-content:center;align-items:center;flex-direction:column;position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;top:35%;width:20rem;padding:2rem;background-color:#62c1dd}#forms-container .urgencies-container{display:flex;gap:.7em;margin-top:2em;justify-content:space-evenly;align-items:center}#forms-container .urgencies{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:.3em}#forms-container .urgencies:hover{cursor:pointer;transform:scale(1.05)}#forms-container #important-urgent{background-color:#f9f871}#forms-container #important-urgent:hover{background-color:#f5f30f}#forms-container #important{background-color:#88f9ba}#forms-container #important:hover{background-color:#27f482}#forms-container #urgent{background-color:#c65f95}#forms-container #urgent:hover{background-color:#8d3262}#forms-container #default{background-color:#96afb8}#forms-container #default:hover{background-color:#5e7f8a}',"",{version:3,sources:["webpack://./src/styles/styles.scss"],names:[],mappings:"AAAA,EAYA,SACE,CAAA,QACA,CAAA,KAGF,YACE,CAAA,wBAdM,CAAA,YAgBN,CAAA,6BACA,CAAA,2BACA,CAAA,gHAEA,CAAA,KAUF,wBA5BM,CAAA,aA8BJ,CAAA,aAEA,CAAA,QAEA,YACE,CAAA,qBACA,CAAA,OACA,CAAA,0BACA,CAAA,eACA,CAAA,cACA,CAAA,MAOJ,cACE,CAAA,YACA,CAAA,qBACA,CAAA,OACA,CAAA,WAGF,UACE,CAAA,WACA,CAAA,YACA,CAAA,sBACA,CAAA,kBACA,CAAA,wBA9DK,CAAA,oBAkEL,YACC,CAAA,kBACA,CAAA,sBAEC,mBACE,CAAA,qBACA,CAAA,gBACA,CAAA,0BAGF,cACE,CAAA,YACA,CAAA,kCACD,UACE,CAAA,SACA,CAAA,UACA,CAAA,iBACA,CAAA,mBACA,CAAA,uBACA,CAAA,wCAGF,wBAxFE,CAAA,yCA4FH,cACE,CAAA,SACA,CAAA,iBACA,CAAA,6DAEA,wBAjGC,CAAA,+DAoGD,WACE,CAAA,wBACA,CAAA,YACA,CAAA,sBACA,CAAA,kBACA,CAAA,aAxGA,CAAA,6DA2GF,wBACE,CAAA,QAIR,gBACE,CAAA,iBAGF,sBACE,CAAA,kBACA,CAAA,qBACA,CAAA,iBACA,CAAA,gBACA,CAAA,iBACA,CAAA,MACA,CAAA,OACA,CAAA,OACA,CAAA,WACA,CAAA,YACA,CAAA,wBAhIK,CAAA,sCAqIL,YACE,CAAA,QACA,CAAA,cACA,CAAA,4BACA,CAAA,kBACA,CAAA,4BAIF,6BACE,CAAA,0BACA,CAAA,qBACA,CAAA,YACA,CAAA,kCAKA,cACE,CAAA,qBACA,CAAA,mCAGJ,wBAvJiB,CAAA,yCA4Jf,wBACE,CAAA,4BAGJ,wBA/JU,CAAA,kCAmKR,wBACE,CAAA,yBAGJ,wBAtKO,CAAA,+BA0KL,wBACE,CAAA,0BAGJ,wBAjLQ,CAAA,gCAqLN,wBACE",sourcesContent:['\n\n$bg: #fff;\n$rare: #62C1DD;\n$flare: #D8ECE8\n;\n$pop: #F1B770;\n$default: #96AFB8;\n$important-urgent: #F9F871;\n$important: #88F9BA;\n$urgent: #C65F95;\n\n*{\n  padding: 0;\n  margin: 0;\n}\n\nbody{\n  height: 100vh;\n  background-color: $flare;\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-template-rows: 1fr 20fr;\n  grid-template-areas: \n  "header header"\n  "nav main"\n  "nav main"\n  "nav main"\n  "nav main"\n  "nav main"\n  "nav main"\n  "nav main";\n}\n\n.nav{\n  background-color: $pop;\n  color: #393D3A;\n\n  grid-area:nav;\n\n  li{\n    display:flex;\n    flex-direction: column;\n    gap:2em;\n    justify-content: flex-start;\n    margin-left:1em;\n    margin-top:4em;\n  }\n  \n}\n\n\n\n.main{\n  grid-area: main;\n  display:flex;\n  flex-direction: column;\n  gap:1em;\n\n}\n#add-to-do{\n  width: 50px;\n  height:50px;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  background-color: $rare;\n}\n\n  .checkbox-container{\n   display:flex;\n   align-items:center;\n   \n    p{\n      align-self: flex-end;\n      justify-self: flex-end;\n      margin-left:auto;\n    }\n\n    label{\n      cursor: pointer;\n      display:flex;\n     &::before{\n       content: \'\';\n       width: 1em;\n       height: 1em;\n       margin-right: .5em;\n       border-radius: .15em;      \n       border: 0.05em solid black;\n\n      }\n     &:hover::before{\n       background-color: $rare;\n     }\n    }\n    input[type=\'checkbox\']{\n      cursor: pointer;\n      opacity: 0;\n      position: absolute;\n      \n      &:hover + label::before {\n        background-color: $rare;\n      }\n      &:checked + label::before{\n        content: \'\\002714\';\n        background-color: darken($rare, 20%);\n        display:flex;\n        justify-content: center;\n        align-items:center;\n        color: $flare;\n      }\n      &:focus + label::before {\n        box-shadow: 0 0 20px black;\n      }\n    }\n  }\n.header{\n  grid-area:header;\n}\n\n#forms-container{\n  justify-content: center;\n  align-items: center;\n  flex-direction: column; \n  position: absolute;\n  margin-left:auto;\n  margin-right:auto;\n  left:0;\n  right:0;\n  top:35%;\n  width:20rem;\n  padding:2rem;\n\n  background-color: $rare;\n\n\n  .urgencies-container{\n    display:flex;\n    gap:.7em;\n    margin-top:2em;\n    justify-content: space-evenly;\n    align-items: center;\n    \n\n  }\n  .urgencies{\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    padding:0.3em;\n    \n\n    \n\n    &:hover{\n      cursor:pointer;\n      transform:scale(1.05)\n    }\n  }\n  #important-urgent{\n    background-color:$important-urgent;\n    \n    \n    \n    &:hover{\n      background-color: darken($important-urgent, 20%);\n    }\n  }\n  #important{\n    background-color: $important;\n    \n    \n    &:hover{\n      background-color: darken($important, 20%);\n    }\n  }\n  #urgent{\n    background-color: $urgent;\n    \n    \n    &:hover{\n      background-color: darken($urgent, 20%); \n    }\n  }\n  #default{ \n    background-color:$default;\n    \n    \n    &:hover{\n      background-color: darken($default, 20%);\n      }\n  }\n}'],sourceRoot:""}]);const i=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var A={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(A[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&A[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),A=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(A).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},A=[],i=0;i<e.length;i++){var c=e[i],s=r.base?c[0]+r.base:c[0],l=a[s]||0,d="".concat(s," ").concat(l);a[s]=l+1;var u=t(d),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=o(m,r);r.byIndex=i,n.splice(i,0,{identifier:d,updater:p,references:1})}A.push(d)}return A}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var A=0;A<a.length;A++){var i=t(a[A]);n[i].references--}for(var c=r(e,o),s=0;s<a.length;s++){var l=t(a[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),A=t.n(a),i=t(565),c=t.n(i),s=t(216),l=t.n(s),d=t(589),u=t.n(d),m=t(137),p={};p.styleTagTransform=u(),p.setAttributes=c(),p.insert=A().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=l(),n()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;class f{constructor(e){this.listElement=e,this.textList=[]}static createBox(e){let n=document.createElement("input");return n.setAttribute("type","checkbox"),n.id=e,n}static createLabel(e,n){let t=document.createElement("label");return t.setAttribute("for",n),t.innerText=e,t}static createInfoSection(){let e=document.createElement("p");return e.innerText="2/4/2022",e}static createButton(){let e=document.createElement("button");return e.innerText="Add New To Do",e.id="add-to-do",e}update(){for(;this.listElement.firstChild;)this.listElement.removeChild(this.listElement.firstChild);for(let e=0;e<this.textList.length;e++){let n=document.createElement("div");n.className="checkbox-container",n.append(f.createBox(e),f.createLabel(this.textList[e],e),f.createInfoSection()),this.listElement.appendChild(n)}this.listElement.appendChild(f.createButton())}pushToArray(e){this.textList.push(e),this.update()}removeElement(e){let n=this.textList.indexOf(e);this.textList.splice(n,1),this.update()}}const C=["salad","balad","swalad"];let g="project0";((e,n,t)=>{if("object"!=typeof e)throw"Arguments must be strings!";e.push("DUCKS");const r=document.getElementsByClassName(n);for(let e=0;e<r.length;e++)r[e].remove();const o=document.body,a=document.createElement("div");(()=>{const n=document.createElement("ul");a.appendChild(n),a.className="nav";for(let t=0;t<e.length;t++){let r=document.createElement("li");r.innerText=`${e[t]}`,r.id="project"+t,r.className="nav-options",n.appendChild(r)}o.appendChild(a)})()})(C,"nav","DUCKS");const b=document.getElementById("main"),h=[];for(let e=0;e<C.length;e++)h.push("project"+e),window[h[e]]=new f(b);var v;window[h[0]].update(),g=window[h[0]],(()=>{const e=document.getElementsByClassName("nav-options");for(let n=0;n<e.length;n++)e[n].addEventListener("click",(function(){let e=window[h[n]];e.update(),g=e}))})(),v=g,document.querySelector("#add-to-do").addEventListener("click",(function(){return v.pushToArray("taco")})),(()=>{const e=document.forms["todo-form"],n=document.getElementsByClassName("urgencies");let t=n[3];t.style.border="black 3px solid",t.style.margin="-3px";for(let e=0;e<n.length;e++)n[e].addEventListener("click",(function(){t.style.border="none",t.style.margin="auto",t=n[e],t.style.border="black 3px solid",t.style.margin="-3px"}));e.addEventListener("submit",(function(n){n.preventDefault();let t=document.getElementById("task").value;g.pushToArray(t),g.update(),e.style.display="none",e.style.display="block",e.reset()}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";var e={137:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),A=t.n(a)()(r());A.push([e.id,'*{padding:0;margin:0}body{height:100vh;background-color:#e0cbcb;display:grid;grid-template-columns:1fr 5fr;grid-template-rows:1fr 20fr;grid-template-areas:"header header" "nav main" "nav main" "nav main" "nav main" "nav main" "nav main" "nav main"}.nav{background-color:#f1b770;color:#393d3a;grid-area:nav;display:flex;flex-direction:column;gap:2em}.nav ul{background-color:#f1b770}.nav li{display:flex;flex-direction:column;gap:2em;justify-content:flex-start;margin-left:1em;margin-top:4em}.nav #new-project{background-color:#62c1dd}.nav #new-project:hover{transform:scaleY(1.05);background-color:#38b0d4;cursor:pointer}.nav-options:hover{cursor:pointer;background-color:#62c1dd}.main{grid-area:main;display:flex;flex-direction:column;gap:1em}#add-to-do{border-radius:10px;height:2.5em;width:75%;margin:0 auto;display:flex;justify-content:center;align-items:center;background-color:#62c1dd}#add-to-do:hover{transform:scaleY(1.05);background-color:#38b0d4;cursor:pointer}.checkbox-container{display:flex;align-items:center}.checkbox-container p{align-self:flex-end;justify-self:flex-end;margin-left:auto}.checkbox-container label{cursor:pointer;display:flex}.checkbox-container label::before{content:"";width:1em;height:1em;margin-right:.5em;border-radius:.15em;border:.05em solid #000}.checkbox-container label:hover::before{background-color:#62c1dd}.checkbox-container input[type=checkbox]{cursor:pointer;opacity:0;position:absolute}.checkbox-container input[type=checkbox]:hover+label::before{background-color:#62c1dd}.checkbox-container input[type=checkbox]:checked+label::before{content:"âœ”";background-color:#2793b2;display:flex;justify-content:center;align-items:center;color:#e0cbcb}.checkbox-container input[type=checkbox]:focus+label::before{box-shadow:0 0 20px #000}.header{grid-area:header}#forms-container{justify-content:center;align-items:center;flex-direction:column;position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;top:35%;width:20rem;padding:2rem;background-color:#62c1dd;border-radius:20px}#forms-container .urgencies-container{display:flex;gap:.7em;margin-top:2em;justify-content:space-evenly;align-items:center}#forms-container .urgencies{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:.3em}#forms-container .urgencies:hover{cursor:pointer;transform:scale(1.05)}#forms-container #important-urgent{background-color:#f9f871}#forms-container #important-urgent:hover{background-color:#f5f30f}#forms-container #important{background-color:#88f9ba}#forms-container #important:hover{background-color:#27f482}#forms-container #urgent{background-color:#c65f95}#forms-container #urgent:hover{background-color:#8d3262}#forms-container #default{background-color:#96afb8}#forms-container #default:hover{background-color:#5e7f8a}.project-create-forum{justify-content:center;align-items:center;flex-direction:column;position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;top:35%;width:20rem;padding:2rem;background-color:#62c1dd;border-radius:20px}',"",{version:3,sources:["webpack://./src/styles/styles.scss"],names:[],mappings:"AAAA,EAYA,SACE,CAAA,QACA,CAAA,KAGF,YACE,CAAA,wBAdM,CAAA,YAgBN,CAAA,6BACA,CAAA,2BACA,CAAA,gHAEA,CAAA,KAUF,wBA5BM,CAAA,aA8BJ,CAAA,aAEA,CAAA,YACA,CAAA,qBACA,CAAA,OACA,CAAA,QAEA,wBArCI,CAAA,QAwCJ,YACE,CAAA,qBACA,CAAA,OACA,CAAA,0BACA,CAAA,eACA,CAAA,cACA,CAAA,kBAGF,wBApDK,CAAA,wBAsDH,sBACE,CAAA,wBACA,CAAA,cACA,CAAA,mBAOJ,cACE,CAAA,wBAjEG,CAAA,MAuEP,cACE,CAAA,YACA,CAAA,qBACA,CAAA,OACA,CAAA,WAGF,kBACE,CAAA,YACA,CAAA,SACA,CAAA,aACA,CAAA,YACA,CAAA,sBACA,CAAA,kBACA,CAAA,wBArFK,CAAA,iBAwFL,sBACE,CAAA,wBACA,CAAA,cACA,CAAA,oBAIF,YACC,CAAA,kBACA,CAAA,sBAGC,mBACE,CAAA,qBACA,CAAA,gBACA,CAAA,0BAGF,cACE,CAAA,YACA,CAAA,kCACD,UACE,CAAA,SACA,CAAA,UACA,CAAA,iBACA,CAAA,mBACA,CAAA,uBACA,CAAA,wCAGF,wBAtHE,CAAA,yCA0HH,cACE,CAAA,SACA,CAAA,iBACA,CAAA,6DAEA,wBA/HC,CAAA,+DAkID,WACE,CAAA,wBACA,CAAA,YACA,CAAA,sBACA,CAAA,kBACA,CAAA,aAtIA,CAAA,6DAyIF,wBACE,CAAA,QAIR,gBACE,CAAA,iBAGF,sBACE,CAAA,kBACA,CAAA,qBACA,CAAA,iBACA,CAAA,gBACA,CAAA,iBACA,CAAA,MACA,CAAA,OACA,CAAA,OACA,CAAA,WACA,CAAA,YACA,CAAA,wBA9JK,CAAA,kBAiKL,CAAA,sCAGA,YACE,CAAA,QACA,CAAA,cACA,CAAA,4BACA,CAAA,kBACA,CAAA,4BAIF,6BACE,CAAA,0BACA,CAAA,qBACA,CAAA,YACA,CAAA,kCAKA,cACE,CAAA,qBACA,CAAA,mCAGJ,wBAtLiB,CAAA,yCA2Lf,wBACE,CAAA,4BAGJ,wBA9LU,CAAA,kCAkMR,wBACE,CAAA,yBAGJ,wBArMO,CAAA,+BAyML,wBACE,CAAA,0BAGJ,wBAhNQ,CAAA,gCAoNN,wBACE,CAAA,sBAKN,sBACE,CAAA,kBACA,CAAA,qBACA,CAAA,iBACA,CAAA,gBACA,CAAA,iBACA,CAAA,MACA,CAAA,OACA,CAAA,OACA,CAAA,WACA,CAAA,YACA,CAAA,wBAzOK,CAAA,kBA4OL",sourcesContent:['\n\n$bg: #fff;\n$rare: #62C1DD;\n$flare: rgb(224, 203, 203)\n;\n$pop: #F1B770;\n$default: #96AFB8;\n$important-urgent: #F9F871;\n$important: #88F9BA;\n$urgent: #C65F95;\n\n*{\n  padding: 0;\n  margin: 0;\n}\n\nbody{\n  height: 100vh;\n  background-color: $flare;\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-template-rows: 1fr 20fr;\n  grid-template-areas: \n  "header header"\n  "nav main"\n  "nav main"\n  "nav main"\n  "nav main"\n  "nav main"\n  "nav main"\n  "nav main";\n}\n\n.nav{\n  background-color: $pop;\n  color: #393D3A;\n\n  grid-area:nav;\n  display:flex;\n  flex-direction: column;\n  gap:2em;\n\n  ul{\n    background-color: $pop;\n  }\n  li{\n    display:flex;\n    flex-direction: column;\n    gap:2em;\n    justify-content: flex-start;\n    margin-left:1em;\n    margin-top:4em;\n  }\n  \n  #new-project{\n    background-color: $rare;\n    &:hover{\n      transform: scaleY(1.05);\n      background-color: darken($rare, 10%);\n      cursor: pointer;\n    }\n  }\n  \n}\n\n.nav-options{\n  &:hover{\n    cursor: pointer;\n    background-color: $rare;\n  }\n}\n\n\n.main{\n  grid-area: main;\n  display:flex;\n  flex-direction: column;\n  gap:1em;\n\n}\n#add-to-do{\n  border-radius:10px;\n  height:2.5em;\n  width:75%;\n  margin: 0 auto;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  background-color: $rare;\n\n  &:hover{\n    transform: scaleY(1.05);\n    background-color: darken($rare, 10%);\n    cursor: pointer;\n  }\n}\n\n  .checkbox-container{\n   display:flex;\n   align-items:center;\n\n   \n    p{\n      align-self: flex-end;\n      justify-self: flex-end;\n      margin-left:auto;\n    }\n\n    label{\n      cursor: pointer;\n      display:flex;\n     &::before{\n       content: \'\';\n       width: 1em;\n       height: 1em;\n       margin-right: .5em;\n       border-radius: .15em;      \n       border: 0.05em solid black;\n\n      }\n     &:hover::before{\n       background-color: $rare;\n     }\n    }\n    input[type=\'checkbox\']{\n      cursor: pointer;\n      opacity: 0;\n      position: absolute;\n      \n      &:hover + label::before {\n        background-color: $rare;\n      }\n      &:checked + label::before{\n        content: \'\\002714\';\n        background-color: darken($rare, 20%);\n        display:flex;\n        justify-content: center;\n        align-items:center;\n        color: $flare;\n      }\n      &:focus + label::before {\n        box-shadow: 0 0 20px black;\n      }\n    }\n  }\n.header{\n  grid-area:header;\n}\n\n#forms-container{\n  justify-content: center;\n  align-items: center;\n  flex-direction: column; \n  position: absolute;\n  margin-left:auto;\n  margin-right:auto;\n  left:0;\n  right:0;\n  top:35%;\n  width:20rem;\n  padding:2rem;\n\n  background-color: $rare;\n  border-radius: 20px;\n\n\n  .urgencies-container{\n    display:flex;\n    gap:.7em;\n    margin-top:2em;\n    justify-content: space-evenly;\n    align-items: center;\n    \n\n  }\n  .urgencies{\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    padding:0.3em;\n    \n\n    \n\n    &:hover{\n      cursor:pointer;\n      transform:scale(1.05)\n    }\n  }\n  #important-urgent{\n    background-color:$important-urgent;\n    \n    \n    \n    &:hover{\n      background-color: darken($important-urgent, 20%);\n    }\n  }\n  #important{\n    background-color: $important;\n    \n    \n    &:hover{\n      background-color: darken($important, 20%);\n    }\n  }\n  #urgent{\n    background-color: $urgent;\n    \n    \n    &:hover{\n      background-color: darken($urgent, 20%); \n    }\n  }\n  #default{ \n    background-color:$default;\n    \n    \n    &:hover{\n      background-color: darken($default, 20%);\n      }\n  }\n}\n\n.project-create-forum{\n  justify-content: center;\n  align-items: center;\n  flex-direction: column; \n  position: absolute;\n  margin-left:auto;\n  margin-right:auto;\n  left:0;\n  right:0;\n  top:35%;\n  width:20rem;\n  padding:2rem;\n\n  background-color: $rare;\n  border-radius: 20px;\n\n}'],sourceRoot:""}]);const c=A},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var A={};if(o)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(A[i]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&A[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),A=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(A).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},A=[],c=0;c<e.length;c++){var i=e[c],s=o.base?i[0]+o.base:i[0],l=a[s]||0,d="".concat(s," ").concat(l);a[s]=l+1;var u=t(d),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=r(m,o);o.byIndex=c,n.splice(c,0,{identifier:d,updater:p,references:1})}A.push(d)}return A}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var A=0;A<a.length;A++){var c=t(a[A]);n[c].references--}for(var i=o(e,r),s=0;s<a.length;s++){var l=t(a[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=i}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),A=t.n(a),c=t(565),i=t.n(c),s=t(216),l=t.n(s),d=t(589),u=t.n(d),m=t(137),p={};p.styleTagTransform=u(),p.setAttributes=i(),p.insert=A().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=l(),n()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;const C=["Main ToDo","Dumb Stuff"],f=document.body,g=e=>{const n=C;n.push(e);const t=document.getElementsByClassName("nav");for(let e=0;e<t.length;e++)t[e].remove();const o=document.createElement("div"),r=document.createElement("button");r.innerText="New Project",r.id="new-project",(()=>{const e=document.createElement("ul");o.appendChild(e),o.className="nav";for(let t=0;t<n.length;t++){let a=document.createElement("li");a.innerText=`${n[t]}`,a.id="project"+t,a.className="nav-options",e.appendChild(a),o.appendChild(r)}f.appendChild(o)})()};class h{constructor(e){this.listElement=e,this.textList=[],this.colorList=[],this.isChecked=[]}static createBox(e){let n=document.createElement("input");return n.setAttribute("type","checkbox"),n.id="cb"+e,n}static createLabel(e,n){let t=document.createElement("label");return t.setAttribute("for","cb"+n),t.innerText=e,t}static createInfoSection(){let e=document.createElement("p");return e.innerText="2/4/2022",e}static createButton(){let e=document.createElement("button");return e.innerText="Add New To Do",e.id="add-to-do",e}displayFormButton(){const e=document.forms["todo-form"],n=document.getElementById("forms-container");document.getElementById("add-to-do").addEventListener("click",(function(){e.style.display="",n.style.display=""}))}update(){for(;this.listElement.firstChild;)this.listElement.removeChild(this.listElement.firstChild);for(let e=0;e<this.textList.length;e++){let n=document.createElement("div");n.className="checkbox-container",n.append(h.createBox(e),h.createLabel(this.textList[e],e),h.createInfoSection()),n.style.background=this.colorList[e],this.listElement.appendChild(n)}this.listElement.appendChild(h.createButton()),this.displayFormButton(),this.wasTheCheckBoxChecked()}pushToArray(e,n){this.textList.push(e),this.isChecked.push(!1),void 0===n&&(n="#96AFB8"),this.colorList.push(n),this.update()}removeElement(e){this.textList.splice(e,1),this.colorList.splice(e,1),this.isChecked.splice(e,1),this.update()}wasTheCheckBoxChecked(){for(let e=0;e<this.isChecked.length;e++)console.log(this.isChecked[e]),this.isChecked[e]&&document.getElementById("cb"+e).click()}}const b=document.body;let y="project0";g("DUCKS");const v=document.getElementById("main"),k=[];for(let e=0;e<C.length;e++)k.push("project"+e),window[k[e]]=new h(v);window[k[0]].update(),y=window[k[0]];const B=()=>{const e=document.getElementsByClassName("nav-options");for(let n=0;n<e.length;n++)e[n].addEventListener("click",(function(){let e=window[k[n]];e.update(),y=e,E()}))};B(),(()=>{const e=document.forms["todo-form"],n=document.getElementById("forms-container");document.getElementById("add-to-do").addEventListener("click",(function(){e.style.display="",n.style.display=""}))})(),(()=>{const e=document.forms["todo-form"],n=document.getElementById("forms-container"),t=document.getElementsByClassName("urgencies");let o=t[3];o.style.border="black 3px solid",o.style.margin="-3px";for(let e=0;e<t.length;e++)t[e].addEventListener("click",(function(){o.style.border="none",o.style.margin="auto",o=t[e],o.style.border="black 3px solid",o.style.margin="-3px"}));e.addEventListener("submit",(function(t){t.preventDefault();let r,a=document.getElementById("task").value;r="important-urgent"===o.id?"#F9F871":"important"===o.id?"#88F9BA":"urgent"===o.id?"#C65F95":"#96AFB8",y.pushToArray(a,r),y.update(),E(),console.log(y.isChecked),e.style.display="none",n.style.display="none",e.reset()}))})();const x=()=>{document.getElementById("new-project").addEventListener("click",(function(){const e=document.forms["todo-form"],n=document.getElementById("forms-container");e.style.display="none",n.style.display="none",(()=>{const e=document.createElement("form"),n=document.createElement("div"),t=document.createElement("label"),o=document.createElement("input");e.id="project-creation",t.htmlFor="project-create",t.innerText="New Project Name:",t.id="project-create",o.type="text",n.className="project-create-forum",n.append(t,o),e.appendChild(n),b.appendChild(e),e.addEventListener("submit",(function(n){n.preventDefault(),((e,n)=>{g(e.value),x(),n.remove(),B();for(let e=0;e<C.length;e++)e===C.length-1&&(k.push("project"+e),window[k[e]]=new h(v))})(o,e)}))})()}))};x();const E=()=>{for(let e=0;e<y.textList.length;e++){let n=document.getElementById("cb"+e);n.addEventListener("click",(function(){n.checked?(y.isChecked[e]=!0,console.log(`${y.textList[e]} = true`)):(y.isChecked[e]=!1,console.log(`${y.textList[e]} = false`))}))}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,